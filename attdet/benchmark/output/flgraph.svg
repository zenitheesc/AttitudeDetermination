<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="422" onload="init(evt)" viewBox="0 0 1200 422" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="422.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="405" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="405" > </text>
<g id="frames">
<g >
<title>trigger_load_balance (1 samples, 0.03%)</title><rect x="1152.7" y="165" width="0.3" height="15.0" fill="rgb(207,175,16)" rx="2" ry="2" />
<text  x="1155.70" y="175.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.03%)</title><rect x="59.5" y="245" width="0.3" height="15.0" fill="rgb(241,128,15)" rx="2" ry="2" />
<text  x="62.54" y="255.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.03%)</title><rect x="1187.6" y="165" width="0.3" height="15.0" fill="rgb(240,9,27)" rx="2" ry="2" />
<text  x="1190.61" y="175.5" ></text>
</g>
<g >
<title>__sin_fma (115 samples, 2.91%)</title><rect x="106.1" y="341" width="34.3" height="15.0" fill="rgb(238,103,28)" rx="2" ry="2" />
<text  x="109.10" y="351.5" >__..</text>
</g>
<g >
<title>nohz_balance_exit_idle (1 samples, 0.03%)</title><rect x="1152.7" y="149" width="0.3" height="15.0" fill="rgb(225,209,25)" rx="2" ry="2" />
<text  x="1155.70" y="159.5" ></text>
</g>
<g >
<title>__run_hrtimer (2 samples, 0.05%)</title><rect x="1187.6" y="245" width="0.6" height="15.0" fill="rgb(225,67,28)" rx="2" ry="2" />
<text  x="1190.61" y="255.5" ></text>
</g>
<g >
<title>ata_qc_complete (1 samples, 0.03%)</title><rect x="1187.3" y="181" width="0.3" height="15.0" fill="rgb(220,149,44)" rx="2" ry="2" />
<text  x="1190.31" y="191.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (1 samples, 0.03%)</title><rect x="32.4" y="293" width="0.3" height="15.0" fill="rgb(219,59,13)" rx="2" ry="2" />
<text  x="35.38" y="303.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="96.8" y="309" width="0.3" height="15.0" fill="rgb(247,225,13)" rx="2" ry="2" />
<text  x="99.84" y="319.5" ></text>
</g>
<g >
<title>__do_munmap (1 samples, 0.03%)</title><rect x="1153.3" y="213" width="0.3" height="15.0" fill="rgb(242,164,18)" rx="2" ry="2" />
<text  x="1156.29" y="223.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="59.5" y="293" width="0.3" height="15.0" fill="rgb(226,133,9)" rx="2" ry="2" />
<text  x="62.54" y="303.5" ></text>
</g>
<g >
<title>mmap_region (1 samples, 0.03%)</title><rect x="1153.3" y="229" width="0.3" height="15.0" fill="rgb(239,95,20)" rx="2" ry="2" />
<text  x="1156.29" y="239.5" ></text>
</g>
<g >
<title>__logl (25 samples, 0.63%)</title><rect x="97.1" y="341" width="7.5" height="15.0" fill="rgb(220,15,41)" rx="2" ry="2" />
<text  x="100.14" y="351.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.03%)</title><rect x="1153.0" y="277" width="0.3" height="15.0" fill="rgb(235,212,18)" rx="2" ry="2" />
<text  x="1155.99" y="287.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (1 samples, 0.03%)</title><rect x="96.8" y="229" width="0.3" height="15.0" fill="rgb(223,163,0)" rx="2" ry="2" />
<text  x="99.84" y="239.5" ></text>
</g>
<g >
<title>vmacache_find (1 samples, 0.03%)</title><rect x="19.3" y="197" width="0.2" height="15.0" fill="rgb(226,154,47)" rx="2" ry="2" />
<text  x="22.25" y="207.5" ></text>
</g>
<g >
<title>attdet-benchmar (3,948 samples, 99.85%)</title><rect x="10.0" y="357" width="1178.2" height="15.0" fill="rgb(219,98,21)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >attdet-benchmar</text>
</g>
<g >
<title>perf_iterate_sb (1 samples, 0.03%)</title><rect x="32.7" y="133" width="0.3" height="15.0" fill="rgb(216,1,1)" rx="2" ry="2" />
<text  x="35.68" y="143.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="985.3" y="277" width="0.3" height="15.0" fill="rgb(231,66,19)" rx="2" ry="2" />
<text  x="988.28" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.15%)</title><rect x="1188.2" y="325" width="1.8" height="15.0" fill="rgb(245,64,8)" rx="2" ry="2" />
<text  x="1191.21" y="335.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.03%)</title><rect x="1187.6" y="181" width="0.3" height="15.0" fill="rgb(230,172,8)" rx="2" ry="2" />
<text  x="1190.61" y="191.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="59.5" y="277" width="0.3" height="15.0" fill="rgb(215,57,11)" rx="2" ry="2" />
<text  x="62.54" y="287.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="1187.6" y="197" width="0.3" height="15.0" fill="rgb(230,224,14)" rx="2" ry="2" />
<text  x="1190.61" y="207.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.05%)</title><rect x="1187.6" y="277" width="0.6" height="15.0" fill="rgb(250,3,50)" rx="2" ry="2" />
<text  x="1190.61" y="287.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.03%)</title><rect x="1152.7" y="229" width="0.3" height="15.0" fill="rgb(223,164,49)" rx="2" ry="2" />
<text  x="1155.70" y="239.5" ></text>
</g>
<g >
<title>mmap64 (1 samples, 0.03%)</title><rect x="1153.3" y="341" width="0.3" height="15.0" fill="rgb(250,8,18)" rx="2" ry="2" />
<text  x="1156.29" y="351.5" ></text>
</g>
<g >
<title>ledtrig_disk_activity (1 samples, 0.03%)</title><rect x="1187.3" y="165" width="0.3" height="15.0" fill="rgb(237,190,31)" rx="2" ry="2" />
<text  x="1190.31" y="175.5" ></text>
</g>
<g >
<title>__open64_nocancel (1 samples, 0.03%)</title><rect x="32.1" y="325" width="0.3" height="15.0" fill="rgb(239,59,54)" rx="2" ry="2" />
<text  x="35.08" y="335.5" ></text>
</g>
<g >
<title>x86_pmu_enable (6 samples, 0.15%)</title><rect x="1188.2" y="133" width="1.8" height="15.0" fill="rgb(251,5,10)" rx="2" ry="2" />
<text  x="1191.21" y="143.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2 samples, 0.05%)</title><rect x="1187.6" y="261" width="0.6" height="15.0" fill="rgb(225,207,51)" rx="2" ry="2" />
<text  x="1190.61" y="271.5" ></text>
</g>
<g >
<title>std::generate_canonical&lt;double, 53ul, std::mersenne_twister_engine&lt;unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul&gt; &gt; (116 samples, 2.93%)</title><rect x="1153.6" y="341" width="34.6" height="15.0" fill="rgb(233,179,19)" rx="2" ry="2" />
<text  x="1156.59" y="351.5" >st..</text>
</g>
<g >
<title>cpuacct_account_field (1 samples, 0.03%)</title><rect x="140.1" y="149" width="0.3" height="15.0" fill="rgb(215,91,52)" rx="2" ry="2" />
<text  x="143.12" y="159.5" ></text>
</g>
<g >
<title>load_elf_binary (6 samples, 0.15%)</title><rect x="1188.2" y="213" width="1.8" height="15.0" fill="rgb(215,59,44)" rx="2" ry="2" />
<text  x="1191.21" y="223.5" ></text>
</g>
<g >
<title>idtentry_exit_cond_rcu (1 samples, 0.03%)</title><rect x="985.3" y="293" width="0.3" height="15.0" fill="rgb(218,60,22)" rx="2" ry="2" />
<text  x="988.28" y="303.5" ></text>
</g>
<g >
<title>attdet::quest (41 samples, 1.04%)</title><rect x="19.5" y="309" width="12.3" height="15.0" fill="rgb(230,166,30)" rx="2" ry="2" />
<text  x="22.55" y="319.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.03%)</title><rect x="59.5" y="197" width="0.3" height="15.0" fill="rgb(250,209,37)" rx="2" ry="2" />
<text  x="62.54" y="207.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.03%)</title><rect x="140.1" y="245" width="0.3" height="15.0" fill="rgb(220,157,49)" rx="2" ry="2" />
<text  x="143.12" y="255.5" ></text>
</g>
<g >
<title>__ieee754_logl (125 samples, 3.16%)</title><rect x="59.8" y="341" width="37.3" height="15.0" fill="rgb(236,126,36)" rx="2" ry="2" />
<text  x="62.84" y="351.5" >__i..</text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="33.3" y="245" width="0.3" height="15.0" fill="rgb(228,127,15)" rx="2" ry="2" />
<text  x="36.28" y="255.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.03%)</title><rect x="96.8" y="213" width="0.3" height="15.0" fill="rgb(215,166,26)" rx="2" ry="2" />
<text  x="99.84" y="223.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="33.3" y="309" width="0.3" height="15.0" fill="rgb(252,18,10)" rx="2" ry="2" />
<text  x="36.28" y="319.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.03%)</title><rect x="33.3" y="229" width="0.3" height="15.0" fill="rgb(217,88,33)" rx="2" ry="2" />
<text  x="36.28" y="239.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="1187.3" y="229" width="0.3" height="15.0" fill="rgb(242,134,47)" rx="2" ry="2" />
<text  x="1190.31" y="239.5" ></text>
</g>
<g >
<title>exit_mmap (1 samples, 0.03%)</title><rect x="1153.0" y="229" width="0.3" height="15.0" fill="rgb(244,226,40)" rx="2" ry="2" />
<text  x="1155.99" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (1 samples, 0.03%)</title><rect x="1153.3" y="293" width="0.3" height="15.0" fill="rgb(218,115,19)" rx="2" ry="2" />
<text  x="1156.29" y="303.5" ></text>
</g>
<g >
<title>__do_execve_file (6 samples, 0.15%)</title><rect x="1188.2" y="261" width="1.8" height="15.0" fill="rgb(237,208,23)" rx="2" ry="2" />
<text  x="1191.21" y="271.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="140.1" y="293" width="0.3" height="15.0" fill="rgb(218,136,48)" rx="2" ry="2" />
<text  x="143.12" y="303.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.03%)</title><rect x="140.1" y="261" width="0.3" height="15.0" fill="rgb(217,160,28)" rx="2" ry="2" />
<text  x="143.12" y="271.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.03%)</title><rect x="1187.6" y="213" width="0.3" height="15.0" fill="rgb(254,224,38)" rx="2" ry="2" />
<text  x="1190.61" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="1153.3" y="325" width="0.3" height="15.0" fill="rgb(244,28,8)" rx="2" ry="2" />
<text  x="1156.29" y="335.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="1152.7" y="277" width="0.3" height="15.0" fill="rgb(219,195,42)" rx="2" ry="2" />
<text  x="1155.70" y="287.5" ></text>
</g>
<g >
<title>exec_binprm (6 samples, 0.15%)</title><rect x="1188.2" y="245" width="1.8" height="15.0" fill="rgb(238,24,15)" rx="2" ry="2" />
<text  x="1191.21" y="255.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.03%)</title><rect x="1187.6" y="133" width="0.3" height="15.0" fill="rgb(238,113,45)" rx="2" ry="2" />
<text  x="1190.61" y="143.5" ></text>
</g>
<g >
<title>__x64_sys_execve (6 samples, 0.15%)</title><rect x="1188.2" y="293" width="1.8" height="15.0" fill="rgb(223,2,44)" rx="2" ry="2" />
<text  x="1191.21" y="303.5" ></text>
</g>
<g >
<title>__do_munmap (1 samples, 0.03%)</title><rect x="19.3" y="229" width="0.2" height="15.0" fill="rgb(228,32,0)" rx="2" ry="2" />
<text  x="22.25" y="239.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="140.1" y="277" width="0.3" height="15.0" fill="rgb(240,108,21)" rx="2" ry="2" />
<text  x="143.12" y="287.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.03%)</title><rect x="59.5" y="181" width="0.3" height="15.0" fill="rgb(214,177,43)" rx="2" ry="2" />
<text  x="62.54" y="191.5" ></text>
</g>
<g >
<title>do_mmap (1 samples, 0.03%)</title><rect x="1153.3" y="245" width="0.3" height="15.0" fill="rgb(235,208,40)" rx="2" ry="2" />
<text  x="1156.29" y="255.5" ></text>
</g>
<g >
<title>led_trigger_blink_oneshot (1 samples, 0.03%)</title><rect x="1187.3" y="149" width="0.3" height="15.0" fill="rgb(234,42,2)" rx="2" ry="2" />
<text  x="1190.31" y="159.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.03%)</title><rect x="33.0" y="69" width="0.3" height="15.0" fill="rgb(212,158,8)" rx="2" ry="2" />
<text  x="35.98" y="79.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.03%)</title><rect x="33.0" y="85" width="0.3" height="15.0" fill="rgb(206,181,53)" rx="2" ry="2" />
<text  x="35.98" y="95.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1 samples, 0.03%)</title><rect x="32.4" y="325" width="0.3" height="15.0" fill="rgb(241,114,10)" rx="2" ry="2" />
<text  x="35.38" y="335.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1152.7" y="309" width="0.3" height="15.0" fill="rgb(229,136,51)" rx="2" ry="2" />
<text  x="1155.70" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="19.3" y="277" width="0.2" height="15.0" fill="rgb(215,208,48)" rx="2" ry="2" />
<text  x="22.25" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="19.3" y="293" width="0.2" height="15.0" fill="rgb(219,29,23)" rx="2" ry="2" />
<text  x="22.25" y="303.5" ></text>
</g>
<g >
<title>dl_main (1 samples, 0.03%)</title><rect x="32.4" y="309" width="0.3" height="15.0" fill="rgb(230,107,11)" rx="2" ry="2" />
<text  x="35.38" y="319.5" ></text>
</g>
<g >
<title>perf (6 samples, 0.15%)</title><rect x="1188.2" y="357" width="1.8" height="15.0" fill="rgb(218,69,5)" rx="2" ry="2" />
<text  x="1191.21" y="367.5" ></text>
</g>
<g >
<title>attdet::quest (561 samples, 14.19%)</title><rect x="985.6" y="341" width="167.4" height="15.0" fill="rgb(234,196,21)" rx="2" ry="2" />
<text  x="988.57" y="351.5" >attdet::quest</text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.03%)</title><rect x="1187.6" y="149" width="0.3" height="15.0" fill="rgb(226,214,4)" rx="2" ry="2" />
<text  x="1190.61" y="159.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="33.0" y="165" width="0.3" height="15.0" fill="rgb(234,46,33)" rx="2" ry="2" />
<text  x="35.98" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="32.7" y="325" width="0.6" height="15.0" fill="rgb(237,99,53)" rx="2" ry="2" />
<text  x="35.68" y="335.5" ></text>
</g>
<g >
<title>unlink_file_vma (1 samples, 0.03%)</title><rect x="1153.3" y="165" width="0.3" height="15.0" fill="rgb(251,214,28)" rx="2" ry="2" />
<text  x="1156.29" y="175.5" ></text>
</g>
<g >
<title>ata_qc_complete_multiple (1 samples, 0.03%)</title><rect x="1187.3" y="197" width="0.3" height="15.0" fill="rgb(212,53,5)" rx="2" ry="2" />
<text  x="1190.31" y="207.5" ></text>
</g>
<g >
<title>select_task_rq_rt (1 samples, 0.03%)</title><rect x="96.8" y="197" width="0.3" height="15.0" fill="rgb(234,170,12)" rx="2" ry="2" />
<text  x="99.84" y="207.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="59.5" y="325" width="0.3" height="15.0" fill="rgb(208,124,51)" rx="2" ry="2" />
<text  x="62.54" y="335.5" ></text>
</g>
<g >
<title>account_user_time (1 samples, 0.03%)</title><rect x="140.1" y="165" width="0.3" height="15.0" fill="rgb(216,207,1)" rx="2" ry="2" />
<text  x="143.12" y="175.5" ></text>
</g>
<g >
<title>search_binary_handler (6 samples, 0.15%)</title><rect x="1188.2" y="229" width="1.8" height="15.0" fill="rgb(251,132,38)" rx="2" ry="2" />
<text  x="1191.21" y="239.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.03%)</title><rect x="59.5" y="213" width="0.3" height="15.0" fill="rgb(249,103,52)" rx="2" ry="2" />
<text  x="62.54" y="223.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.03%)</title><rect x="1187.9" y="229" width="0.3" height="15.0" fill="rgb(236,131,0)" rx="2" ry="2" />
<text  x="1190.91" y="239.5" ></text>
</g>
<g >
<title>native_write_msr (6 samples, 0.15%)</title><rect x="1188.2" y="101" width="1.8" height="15.0" fill="rgb(245,75,5)" rx="2" ry="2" />
<text  x="1191.21" y="111.5" ></text>
</g>
<g >
<title>perf_event_enable_on_exec (6 samples, 0.15%)</title><rect x="1188.2" y="165" width="1.8" height="15.0" fill="rgb(207,47,22)" rx="2" ry="2" />
<text  x="1191.21" y="175.5" ></text>
</g>
<g >
<title>error_entry (1 samples, 0.03%)</title><rect x="105.8" y="325" width="0.3" height="15.0" fill="rgb(229,4,8)" rx="2" ry="2" />
<text  x="108.80" y="335.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.03%)</title><rect x="1187.6" y="117" width="0.3" height="15.0" fill="rgb(227,20,2)" rx="2" ry="2" />
<text  x="1190.61" y="127.5" ></text>
</g>
<g >
<title>alglin::inverse&lt;double&gt; (185 samples, 4.68%)</title><rect x="845.0" y="341" width="55.2" height="15.0" fill="rgb(224,203,17)" rx="2" ry="2" />
<text  x="848.01" y="351.5" >algli..</text>
</g>
<g >
<title>do_group_exit (1 samples, 0.03%)</title><rect x="1153.0" y="293" width="0.3" height="15.0" fill="rgb(249,229,44)" rx="2" ry="2" />
<text  x="1155.99" y="303.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2 samples, 0.05%)</title><rect x="844.4" y="309" width="0.6" height="15.0" fill="rgb(209,76,16)" rx="2" ry="2" />
<text  x="847.42" y="319.5" ></text>
</g>
<g >
<title>std::__moneypunct_cache&lt;wchar_t, false&gt;::~__moneypunct_cache (1 samples, 0.03%)</title><rect x="33.3" y="325" width="0.3" height="15.0" fill="rgb(217,144,10)" rx="2" ry="2" />
<text  x="36.28" y="335.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.03%)</title><rect x="1153.0" y="197" width="0.3" height="15.0" fill="rgb(221,77,41)" rx="2" ry="2" />
<text  x="1155.99" y="207.5" ></text>
</g>
<g >
<title>__cos_fma (88 samples, 2.23%)</title><rect x="33.6" y="341" width="26.2" height="15.0" fill="rgb(239,75,9)" rx="2" ry="2" />
<text  x="36.58" y="351.5" >_..</text>
</g>
<g >
<title>update_process_times (1 samples, 0.03%)</title><rect x="140.1" y="197" width="0.3" height="15.0" fill="rgb(244,8,48)" rx="2" ry="2" />
<text  x="143.12" y="207.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="985.3" y="309" width="0.3" height="15.0" fill="rgb(240,96,33)" rx="2" ry="2" />
<text  x="988.28" y="319.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="140.1" y="325" width="0.3" height="15.0" fill="rgb(220,132,21)" rx="2" ry="2" />
<text  x="143.12" y="335.5" ></text>
</g>
<g >
<title>search_binary_handler (2 samples, 0.05%)</title><rect x="32.7" y="229" width="0.6" height="15.0" fill="rgb(223,146,49)" rx="2" ry="2" />
<text  x="35.68" y="239.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.03%)</title><rect x="1187.3" y="277" width="0.3" height="15.0" fill="rgb(243,54,41)" rx="2" ry="2" />
<text  x="1190.31" y="287.5" ></text>
</g>
<g >
<title>ctx_resched (6 samples, 0.15%)</title><rect x="1188.2" y="149" width="1.8" height="15.0" fill="rgb(247,158,38)" rx="2" ry="2" />
<text  x="1191.21" y="159.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="1187.3" y="245" width="0.3" height="15.0" fill="rgb(218,35,41)" rx="2" ry="2" />
<text  x="1190.31" y="255.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="140.1" y="309" width="0.3" height="15.0" fill="rgb(235,201,26)" rx="2" ry="2" />
<text  x="143.12" y="319.5" ></text>
</g>
<g >
<title>all (3,954 samples, 100%)</title><rect x="10.0" y="373" width="1180.0" height="15.0" fill="rgb(243,62,9)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>do_execve (6 samples, 0.15%)</title><rect x="1188.2" y="277" width="1.8" height="15.0" fill="rgb(227,181,31)" rx="2" ry="2" />
<text  x="1191.21" y="287.5" ></text>
</g>
<g >
<title>rcu_core_si (1 samples, 0.03%)</title><rect x="844.7" y="245" width="0.3" height="15.0" fill="rgb(228,119,11)" rx="2" ry="2" />
<text  x="847.71" y="255.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="33.3" y="277" width="0.3" height="15.0" fill="rgb(230,163,20)" rx="2" ry="2" />
<text  x="36.28" y="287.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.03%)</title><rect x="33.3" y="149" width="0.3" height="15.0" fill="rgb(253,65,10)" rx="2" ry="2" />
<text  x="36.28" y="159.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2 samples, 0.05%)</title><rect x="1187.6" y="293" width="0.6" height="15.0" fill="rgb(206,187,6)" rx="2" ry="2" />
<text  x="1190.61" y="303.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.03%)</title><rect x="96.8" y="261" width="0.3" height="15.0" fill="rgb(244,224,49)" rx="2" ry="2" />
<text  x="99.84" y="271.5" ></text>
</g>
<g >
<title>perf_output_begin (1 samples, 0.03%)</title><rect x="32.7" y="101" width="0.3" height="15.0" fill="rgb(233,86,33)" rx="2" ry="2" />
<text  x="35.68" y="111.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (1 samples, 0.03%)</title><rect x="1153.3" y="261" width="0.3" height="15.0" fill="rgb(229,169,15)" rx="2" ry="2" />
<text  x="1156.29" y="271.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1152.7" y="293" width="0.3" height="15.0" fill="rgb(251,87,5)" rx="2" ry="2" />
<text  x="1155.70" y="303.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.03%)</title><rect x="1152.7" y="261" width="0.3" height="15.0" fill="rgb(245,79,16)" rx="2" ry="2" />
<text  x="1155.70" y="271.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1152.7" y="325" width="0.3" height="15.0" fill="rgb(217,12,28)" rx="2" ry="2" />
<text  x="1155.70" y="335.5" ></text>
</g>
<g >
<title>do_cow_fault (1 samples, 0.03%)</title><rect x="33.0" y="53" width="0.3" height="15.0" fill="rgb(222,72,22)" rx="2" ry="2" />
<text  x="35.98" y="63.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2 samples, 0.05%)</title><rect x="1187.6" y="325" width="0.6" height="15.0" fill="rgb(219,139,35)" rx="2" ry="2" />
<text  x="1190.61" y="335.5" ></text>
</g>
<g >
<title>std::__timepunct&lt;wchar_t&gt;::__timepunct (1 samples, 0.03%)</title><rect x="33.3" y="293" width="0.3" height="15.0" fill="rgb(246,157,52)" rx="2" ry="2" />
<text  x="36.28" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2 samples, 0.05%)</title><rect x="844.4" y="325" width="0.6" height="15.0" fill="rgb(238,17,7)" rx="2" ry="2" />
<text  x="847.42" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (1 samples, 0.03%)</title><rect x="1153.0" y="309" width="0.3" height="15.0" fill="rgb(210,76,48)" rx="2" ry="2" />
<text  x="1155.99" y="319.5" ></text>
</g>
<g >
<title>find_vma (1 samples, 0.03%)</title><rect x="19.3" y="213" width="0.2" height="15.0" fill="rgb(207,212,29)" rx="2" ry="2" />
<text  x="22.25" y="223.5" ></text>
</g>
<g >
<title>load_elf_binary (2 samples, 0.05%)</title><rect x="32.7" y="213" width="0.6" height="15.0" fill="rgb(223,188,0)" rx="2" ry="2" />
<text  x="35.68" y="223.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.03%)</title><rect x="59.5" y="165" width="0.3" height="15.0" fill="rgb(230,193,47)" rx="2" ry="2" />
<text  x="62.54" y="175.5" ></text>
</g>
<g >
<title>asm_common_interrupt (1 samples, 0.03%)</title><rect x="1187.3" y="325" width="0.3" height="15.0" fill="rgb(235,145,46)" rx="2" ry="2" />
<text  x="1190.31" y="335.5" ></text>
</g>
<g >
<title>begin_new_exec (1 samples, 0.03%)</title><rect x="32.7" y="197" width="0.3" height="15.0" fill="rgb(228,159,47)" rx="2" ry="2" />
<text  x="35.68" y="207.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.03%)</title><rect x="33.3" y="181" width="0.3" height="15.0" fill="rgb(224,158,10)" rx="2" ry="2" />
<text  x="36.28" y="191.5" ></text>
</g>
<g >
<title>free_pgtables (1 samples, 0.03%)</title><rect x="1153.3" y="181" width="0.3" height="15.0" fill="rgb(237,182,30)" rx="2" ry="2" />
<text  x="1156.29" y="191.5" ></text>
</g>
<g >
<title>__remove_shared_vm_struct (1 samples, 0.03%)</title><rect x="1153.3" y="149" width="0.3" height="15.0" fill="rgb(241,222,30)" rx="2" ry="2" />
<text  x="1156.29" y="159.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.03%)</title><rect x="1187.3" y="293" width="0.3" height="15.0" fill="rgb(216,41,17)" rx="2" ry="2" />
<text  x="1190.31" y="303.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="59.5" y="309" width="0.3" height="15.0" fill="rgb(237,3,36)" rx="2" ry="2" />
<text  x="62.54" y="319.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="33.0" y="133" width="0.3" height="15.0" fill="rgb(237,31,16)" rx="2" ry="2" />
<text  x="35.98" y="143.5" ></text>
</g>
<g >
<title>alglin::adjugate&lt;double&gt; (2,361 samples, 59.71%)</title><rect x="140.4" y="341" width="704.6" height="15.0" fill="rgb(232,21,12)" rx="2" ry="2" />
<text  x="143.41" y="351.5" >alglin::adjugate&lt;double&gt;</text>
</g>
<g >
<title>hrtimer_wakeup (1 samples, 0.03%)</title><rect x="1187.6" y="229" width="0.3" height="15.0" fill="rgb(213,6,46)" rx="2" ry="2" />
<text  x="1190.61" y="239.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.03%)</title><rect x="96.8" y="245" width="0.3" height="15.0" fill="rgb(247,64,36)" rx="2" ry="2" />
<text  x="99.84" y="255.5" ></text>
</g>
<g >
<title>exit_mm (1 samples, 0.03%)</title><rect x="1153.0" y="261" width="0.3" height="15.0" fill="rgb(216,212,37)" rx="2" ry="2" />
<text  x="1155.99" y="271.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.03%)</title><rect x="1187.3" y="261" width="0.3" height="15.0" fill="rgb(227,153,5)" rx="2" ry="2" />
<text  x="1190.31" y="271.5" ></text>
</g>
<g >
<title>perf_event_comm (1 samples, 0.03%)</title><rect x="32.7" y="165" width="0.3" height="15.0" fill="rgb(222,219,27)" rx="2" ry="2" />
<text  x="35.68" y="175.5" ></text>
</g>
<g >
<title>__mod_memcg_state.part.0 (1 samples, 0.03%)</title><rect x="1153.0" y="165" width="0.3" height="15.0" fill="rgb(244,15,10)" rx="2" ry="2" />
<text  x="1155.99" y="175.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.15%)</title><rect x="1188.2" y="341" width="1.8" height="15.0" fill="rgb(214,84,45)" rx="2" ry="2" />
<text  x="1191.21" y="351.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (1 samples, 0.03%)</title><rect x="32.7" y="117" width="0.3" height="15.0" fill="rgb(253,135,8)" rx="2" ry="2" />
<text  x="35.68" y="127.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="96.8" y="293" width="0.3" height="15.0" fill="rgb(223,106,28)" rx="2" ry="2" />
<text  x="99.84" y="303.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="33.3" y="213" width="0.3" height="15.0" fill="rgb(210,25,18)" rx="2" ry="2" />
<text  x="36.28" y="223.5" ></text>
</g>
<g >
<title>perf_event_comm_event.constprop.0 (1 samples, 0.03%)</title><rect x="32.7" y="149" width="0.3" height="15.0" fill="rgb(234,6,3)" rx="2" ry="2" />
<text  x="35.68" y="159.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="985.3" y="325" width="0.3" height="15.0" fill="rgb(245,44,54)" rx="2" ry="2" />
<text  x="988.28" y="335.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.03%)</title><rect x="140.1" y="213" width="0.3" height="15.0" fill="rgb(236,181,44)" rx="2" ry="2" />
<text  x="143.12" y="223.5" ></text>
</g>
<g >
<title>[unknown] (58 samples, 1.47%)</title><rect x="16.3" y="341" width="17.3" height="15.0" fill="rgb(251,149,34)" rx="2" ry="2" />
<text  x="19.27" y="351.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.03%)</title><rect x="59.5" y="229" width="0.3" height="15.0" fill="rgb(229,94,44)" rx="2" ry="2" />
<text  x="62.54" y="239.5" ></text>
</g>
<g >
<title>do_execve (2 samples, 0.05%)</title><rect x="32.7" y="277" width="0.6" height="15.0" fill="rgb(217,171,38)" rx="2" ry="2" />
<text  x="35.68" y="287.5" ></text>
</g>
<g >
<title>do_fault_around (1 samples, 0.03%)</title><rect x="33.3" y="165" width="0.3" height="15.0" fill="rgb(254,205,11)" rx="2" ry="2" />
<text  x="36.28" y="175.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.03%)</title><rect x="1152.7" y="245" width="0.3" height="15.0" fill="rgb(231,14,42)" rx="2" ry="2" />
<text  x="1155.70" y="255.5" ></text>
</g>
<g >
<title>handle_pte_fault (1 samples, 0.03%)</title><rect x="33.3" y="197" width="0.3" height="15.0" fill="rgb(240,132,12)" rx="2" ry="2" />
<text  x="36.28" y="207.5" ></text>
</g>
<g >
<title>[[libahci]] (1 samples, 0.03%)</title><rect x="1187.3" y="213" width="0.3" height="15.0" fill="rgb(231,218,39)" rx="2" ry="2" />
<text  x="1190.31" y="223.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.03%)</title><rect x="33.3" y="261" width="0.3" height="15.0" fill="rgb(220,143,15)" rx="2" ry="2" />
<text  x="36.28" y="271.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.03%)</title><rect x="33.0" y="117" width="0.3" height="15.0" fill="rgb(233,1,36)" rx="2" ry="2" />
<text  x="35.98" y="127.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="96.8" y="325" width="0.3" height="15.0" fill="rgb(253,145,23)" rx="2" ry="2" />
<text  x="99.84" y="335.5" ></text>
</g>
<g >
<title>__rb_erase_color (1 samples, 0.03%)</title><rect x="1153.3" y="133" width="0.3" height="15.0" fill="rgb(218,64,18)" rx="2" ry="2" />
<text  x="1156.29" y="143.5" ></text>
</g>
<g >
<title>account_process_tick (1 samples, 0.03%)</title><rect x="140.1" y="181" width="0.3" height="15.0" fill="rgb(233,189,26)" rx="2" ry="2" />
<text  x="143.12" y="191.5" ></text>
</g>
<g >
<title>alglin::operator*&lt;double, 3, 3, 3&gt; (286 samples, 7.23%)</title><rect x="900.2" y="341" width="85.4" height="15.0" fill="rgb(211,111,27)" rx="2" ry="2" />
<text  x="903.22" y="351.5" >alglin::op..</text>
</g>
<g >
<title>update_process_times (1 samples, 0.03%)</title><rect x="1152.7" y="197" width="0.3" height="15.0" fill="rgb(221,106,53)" rx="2" ry="2" />
<text  x="1155.70" y="207.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.03%)</title><rect x="1153.0" y="181" width="0.3" height="15.0" fill="rgb(238,91,7)" rx="2" ry="2" />
<text  x="1155.99" y="191.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="1153.0" y="341" width="0.3" height="15.0" fill="rgb(214,67,15)" rx="2" ry="2" />
<text  x="1155.99" y="351.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.03%)</title><rect x="1152.7" y="181" width="0.3" height="15.0" fill="rgb(254,152,9)" rx="2" ry="2" />
<text  x="1155.70" y="191.5" ></text>
</g>
<g >
<title>BM_QUEST (10 samples, 0.25%)</title><rect x="16.3" y="309" width="3.0" height="15.0" fill="rgb(205,58,47)" rx="2" ry="2" />
<text  x="19.27" y="319.5" ></text>
</g>
<g >
<title>unmap_region (1 samples, 0.03%)</title><rect x="1153.3" y="197" width="0.3" height="15.0" fill="rgb(238,69,14)" rx="2" ry="2" />
<text  x="1156.29" y="207.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (1 samples, 0.03%)</title><rect x="19.3" y="261" width="0.2" height="15.0" fill="rgb(224,7,26)" rx="2" ry="2" />
<text  x="22.25" y="271.5" ></text>
</g>
<g >
<title>__set_task_comm (1 samples, 0.03%)</title><rect x="32.7" y="181" width="0.3" height="15.0" fill="rgb(235,54,31)" rx="2" ry="2" />
<text  x="35.68" y="191.5" ></text>
</g>
<g >
<title>__munmap (1 samples, 0.03%)</title><rect x="19.3" y="309" width="0.2" height="15.0" fill="rgb(252,108,28)" rx="2" ry="2" />
<text  x="22.25" y="319.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.03%)</title><rect x="140.1" y="229" width="0.3" height="15.0" fill="rgb(210,126,46)" rx="2" ry="2" />
<text  x="143.12" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1153.3" y="309" width="0.3" height="15.0" fill="rgb(210,137,10)" rx="2" ry="2" />
<text  x="1156.29" y="319.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="844.7" y="277" width="0.3" height="15.0" fill="rgb(235,117,3)" rx="2" ry="2" />
<text  x="847.71" y="287.5" ></text>
</g>
<g >
<title>__clear_user (1 samples, 0.03%)</title><rect x="33.0" y="181" width="0.3" height="15.0" fill="rgb(247,103,10)" rx="2" ry="2" />
<text  x="35.98" y="191.5" ></text>
</g>
<g >
<title>__vm_munmap (1 samples, 0.03%)</title><rect x="19.3" y="245" width="0.2" height="15.0" fill="rgb(207,191,45)" rx="2" ry="2" />
<text  x="22.25" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1153.0" y="325" width="0.3" height="15.0" fill="rgb(209,102,7)" rx="2" ry="2" />
<text  x="1155.99" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="32.7" y="309" width="0.6" height="15.0" fill="rgb(228,90,21)" rx="2" ry="2" />
<text  x="35.68" y="319.5" ></text>
</g>
<g >
<title>clear_user (1 samples, 0.03%)</title><rect x="33.0" y="197" width="0.3" height="15.0" fill="rgb(215,98,18)" rx="2" ry="2" />
<text  x="35.98" y="207.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.03%)</title><rect x="59.5" y="261" width="0.3" height="15.0" fill="rgb(230,1,23)" rx="2" ry="2" />
<text  x="62.54" y="271.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (6 samples, 0.15%)</title><rect x="1188.2" y="117" width="1.8" height="15.0" fill="rgb(228,83,20)" rx="2" ry="2" />
<text  x="1191.21" y="127.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.03%)</title><rect x="844.7" y="261" width="0.3" height="15.0" fill="rgb(228,173,15)" rx="2" ry="2" />
<text  x="847.71" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_execve (2 samples, 0.05%)</title><rect x="32.7" y="293" width="0.6" height="15.0" fill="rgb(209,25,20)" rx="2" ry="2" />
<text  x="35.68" y="303.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (5 samples, 0.13%)</title><rect x="104.6" y="341" width="1.5" height="15.0" fill="rgb(210,157,22)" rx="2" ry="2" />
<text  x="107.60" y="351.5" ></text>
</g>
<g >
<title>begin_new_exec (6 samples, 0.15%)</title><rect x="1188.2" y="197" width="1.8" height="15.0" fill="rgb(225,19,48)" rx="2" ry="2" />
<text  x="1191.21" y="207.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.03%)</title><rect x="31.8" y="309" width="0.3" height="15.0" fill="rgb(241,121,0)" rx="2" ry="2" />
<text  x="34.79" y="319.5" ></text>
</g>
<g >
<title>exec_binprm (2 samples, 0.05%)</title><rect x="32.7" y="245" width="0.6" height="15.0" fill="rgb(234,157,27)" rx="2" ry="2" />
<text  x="35.68" y="255.5" ></text>
</g>
<g >
<title>attach_entity_load_avg (1 samples, 0.03%)</title><rect x="1187.6" y="101" width="0.3" height="15.0" fill="rgb(216,67,51)" rx="2" ry="2" />
<text  x="1190.61" y="111.5" ></text>
</g>
<g >
<title>__do_execve_file (2 samples, 0.05%)</title><rect x="32.7" y="261" width="0.6" height="15.0" fill="rgb(205,153,25)" rx="2" ry="2" />
<text  x="35.68" y="271.5" ></text>
</g>
<g >
<title>BM_QUEST (21 samples, 0.53%)</title><rect x="10.0" y="341" width="6.3" height="15.0" fill="rgb(244,122,6)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.03%)</title><rect x="1152.7" y="213" width="0.3" height="15.0" fill="rgb(213,155,1)" rx="2" ry="2" />
<text  x="1155.70" y="223.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="33.0" y="101" width="0.3" height="15.0" fill="rgb(233,19,48)" rx="2" ry="2" />
<text  x="35.98" y="111.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2 samples, 0.05%)</title><rect x="1187.6" y="309" width="0.6" height="15.0" fill="rgb(254,88,6)" rx="2" ry="2" />
<text  x="1190.61" y="319.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2 samples, 0.05%)</title><rect x="844.4" y="293" width="0.6" height="15.0" fill="rgb(229,171,46)" rx="2" ry="2" />
<text  x="847.42" y="303.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (1 samples, 0.03%)</title><rect x="1153.3" y="277" width="0.3" height="15.0" fill="rgb(216,146,21)" rx="2" ry="2" />
<text  x="1156.29" y="287.5" ></text>
</g>
<g >
<title>[unknown] (53 samples, 1.34%)</title><rect x="16.3" y="325" width="15.8" height="15.0" fill="rgb(236,75,36)" rx="2" ry="2" />
<text  x="19.27" y="335.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.03%)</title><rect x="33.0" y="149" width="0.3" height="15.0" fill="rgb(207,0,6)" rx="2" ry="2" />
<text  x="35.98" y="159.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.15%)</title><rect x="1188.2" y="309" width="1.8" height="15.0" fill="rgb(246,145,28)" rx="2" ry="2" />
<text  x="1191.21" y="319.5" ></text>
</g>
<g >
<title>__irqentry_text_end (1 samples, 0.03%)</title><rect x="105.5" y="325" width="0.3" height="15.0" fill="rgb(232,81,47)" rx="2" ry="2" />
<text  x="108.50" y="335.5" ></text>
</g>
<g >
<title>perf_event_exec (6 samples, 0.15%)</title><rect x="1188.2" y="181" width="1.8" height="15.0" fill="rgb(223,133,33)" rx="2" ry="2" />
<text  x="1191.21" y="191.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="96.8" y="277" width="0.3" height="15.0" fill="rgb(206,193,5)" rx="2" ry="2" />
<text  x="99.84" y="287.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.03%)</title><rect x="1187.3" y="309" width="0.3" height="15.0" fill="rgb(247,41,29)" rx="2" ry="2" />
<text  x="1190.31" y="319.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (1 samples, 0.03%)</title><rect x="1153.0" y="213" width="0.3" height="15.0" fill="rgb(211,69,15)" rx="2" ry="2" />
<text  x="1155.99" y="223.5" ></text>
</g>
<g >
<title>__get_vma_policy (1 samples, 0.03%)</title><rect x="33.0" y="37" width="0.3" height="15.0" fill="rgb(251,140,53)" rx="2" ry="2" />
<text  x="35.98" y="47.5" ></text>
</g>
<g >
<title>mmput (1 samples, 0.03%)</title><rect x="1153.0" y="245" width="0.3" height="15.0" fill="rgb(214,201,23)" rx="2" ry="2" />
<text  x="1155.99" y="255.5" ></text>
</g>
</g>
</svg>
